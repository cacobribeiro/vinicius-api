{"version":3,"sources":["actions/index.js","service/issAPI.js","components/ISSLocation.js","App.js","reducers/issLocation.js","reducers/index.js","store/index.js","index.js"],"names":["fetchISSLocation","dispatch","type","fetch","then","response","json","ok","Promise","resolve","reject","location","iss_position","latitude","longitude","parseFloat","receiveISSLocationSuccess","ISSLocation","getCurrentISSLocation","this","props","timer","setInterval","clearInterval","isLocationPresent","className","center","width","height","zoom","anchor","Component","connect","state","isFetching","issLocation","App","INITIAL_ISS_LOCATION_STATE","action","console","log","rootReducer","combineReducers","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"mRAiBO,SAASA,IACd,OAAO,SAACC,GAGN,OAFAA,EAb8B,CAChCC,KALkC,yBCClCC,MAAM,GAAD,OAHc,6BAGd,kBAAiCC,MAAK,SAACC,GAAD,OACzCA,EAASC,OAAOF,MAAK,SAACE,GAAD,OAAWD,EAASE,GAAKC,QAAQC,QAAQH,GAAQE,QAAQE,OAAOJ,SDiBtDF,MAAK,SAACO,GAAD,OAClCV,EAZ4B,SAAC,GAAD,QAAGW,aAAgBC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,UAA7B,MAAgD,CAChFZ,KAR0C,+BAS1CW,SAAUE,WAAWF,GACrBC,UAAWC,WAAWD,IASTE,CAA0BL,Q,6BEfnCM,E,kLACiB,IACXC,EAA0BC,KAAKC,MAA/BF,sBAERC,KAAKE,MAAQC,YAAYJ,EAAuB,O,2CAIhDK,cAAcJ,KAAKE,S,+BAGX,IAAD,EACyBF,KAAKC,MAA7BP,EADD,EACCA,SAAUC,EADX,EACWA,UAEZU,EAAoBX,GAAYC,EAEtC,OACE,6BACE,yBAAKW,UAAU,OACb,kBAAC,IAAD,CAAKC,OAAQ,CAAC,EAAG,GAAIC,MAAO,IAAKC,OAAQ,IAAKC,KAAM,GACjDL,GAAqB,kBAAC,IAAD,CAAQM,OAAQ,CAACjB,EAAUC,Y,GApBnCiB,aAsCXC,eAVS,SAACC,GAAD,MAAY,CAClCC,WAAYD,EAAME,YAAYD,WAC9BrB,SAAUoB,EAAME,YAAYtB,SAC5BC,UAAWmB,EAAME,YAAYrB,cAGJ,SAACb,GAAD,MAAe,CACxCiB,sBAAuB,kBAAMjB,EAASD,SAGzBgC,CAA6Cf,GC9B7CmB,MAXf,WACE,OACE,yBAAKX,UAAU,OACb,4EACA,yBAAKA,UAAU,mBACb,kBAAC,EAAD,S,sBCJFY,EAA6B,CACjCH,YAAY,EACZrB,SAAU,KACVC,UAAW,MAuBEqB,EApBK,WAAiD,IAAhDF,EAA+C,uDAAvCI,EAA4BC,EAAW,uCAElE,OADAC,QAAQC,IAAI,mBAAoBF,GACxBA,EAAOpC,MACb,IJZgC,uBIa9B,OAAO,2BACF+B,GADL,IAEEC,YAAY,IAEhB,IJhBwC,+BIiBtC,OAAO,2BACFD,GADL,IAEEpB,SAAUyB,EAAOzB,SACjBC,UAAWwB,EAAOxB,UAClBoB,YAAY,IAEhB,QACE,OAAOD,ICpBEQ,EAJKC,YAAgB,CAClCP,gBCGaQ,EAFDC,YAAYC,EAASC,YAAgBC,M,MCGnDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.d9b74e42.chunk.js","sourcesContent":["import { getCurrentISSLocation } from '../service/issAPI';\n\nexport const REQUEST_ISS_LOCATION = 'REQUEST_ISS_LOCATION';\nexport const REQUEST_ISS_LOCATION_SUCCESS = 'REQUEST_ISS_LOCATION_SUCCESS';\n\n// Actions retornam objetos\nconst requestISSLocation = () => ({\n  type: REQUEST_ISS_LOCATION,\n});\n// Actions retornam objetos\nconst receiveISSLocationSuccess = ({ iss_position: { latitude, longitude } }) => ({\n  type: REQUEST_ISS_LOCATION_SUCCESS,\n  latitude: parseFloat(latitude),\n  longitude: parseFloat(longitude),\n});\n\n// Action Assincrono Creator Retorna uma Funcao Com o Thunk\nexport function fetchISSLocation() {\n  return (dispatch) => {\n    dispatch(requestISSLocation());\n\n    return getCurrentISSLocation().then((location) =>\n      dispatch(receiveISSLocationSuccess(location)),\n    );\n  };\n}\n","const ISS_BASE_API = 'http://api.open-notify.org';\n\nexport const getCurrentISSLocation = () =>\n  fetch(`${ISS_BASE_API}/iss-now.json`).then((response) =>\n    response.json().then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json))),\n  );\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchISSLocation } from '../actions';\n\nimport Map from 'pigeon-maps';\nimport Marker from 'pigeon-marker';\n\nclass ISSLocation extends Component {\n  componentDidMount() {\n    const { getCurrentISSLocation } = this.props;\n\n    this.timer = setInterval(getCurrentISSLocation, 500);\n  }\n\n  componentWillMount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { latitude, longitude } = this.props;\n\n    const isLocationPresent = latitude && longitude;\n\n    return (\n      <div>\n        <div className=\"map\">\n          <Map center={[0, 0]} width={800} height={600} zoom={2}>\n            {isLocationPresent && <Marker anchor={[latitude, longitude]} />}\n          </Map>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isFetching: state.issLocation.isFetching,\n  latitude: state.issLocation.latitude,\n  longitude: state.issLocation.longitude,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentISSLocation: () => dispatch(fetchISSLocation()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ISSLocation);\n","import React from 'react';\nimport './App.css';\nimport ISSLocation from './components/ISSLocation';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>International Space Station Location Tracker</h1>\n      <div className=\"container-fluid\">\n        <ISSLocation />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  REQUEST_ISS_LOCATION,\n  REQUEST_ISS_LOCATION_SUCCESS\n} from '../actions';\n\nconst INITIAL_ISS_LOCATION_STATE = {\n  isFetching: false,\n  latitude: null,\n  longitude: null\n}\n\nconst issLocation = (state = INITIAL_ISS_LOCATION_STATE, action) => {\n  console.log('received action:', action);\n  switch (action.type) {\n    case REQUEST_ISS_LOCATION:\n      return {\n        ...state,\n        isFetching: true\n      };\n    case REQUEST_ISS_LOCATION_SUCCESS:\n      return {\n        ...state,\n        latitude: action.latitude,\n        longitude: action.longitude,\n        isFetching: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default issLocation;\n","import { combineReducers } from 'redux';\nimport issLocation from './issLocation';\n\nconst rootReducer = combineReducers({\n  issLocation,\n});\n\nexport default rootReducer;","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from '../reducers';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}